!function () { if ("undefined" != typeof window && window.addEventListener) { var e, t = Object.create(null), n = function () { clearTimeout(e), e = setTimeout(u, 100) }, o = function () { }, i = function () { if (window.addEventListener("resize", n, !1), window.addEventListener("orientationchange", n, !1), window.MutationObserver) { var e = new MutationObserver(n); e.observe(document.documentElement, { childList: !0, subtree: !0, attributes: !0 }), o = function () { try { e.disconnect(), window.removeEventListener("resize", n, !1), window.removeEventListener("orientationchange", n, !1) } catch (e) { } } } else document.documentElement.addEventListener("DOMSubtreeModified", n, !1), o = function () { document.documentElement.removeEventListener("DOMSubtreeModified", n, !1), window.removeEventListener("resize", n, !1), window.removeEventListener("orientationchange", n, !1) } }, r = function (e) { function t(e) { if (void 0 !== e.protocol) var t = e; else (t = document.createElement("a")).href = e; return t.protocol.replace(/:/g, "") + t.host } if (window.XMLHttpRequest) { var n = new XMLHttpRequest, o = t(location); e = t(e), n = void 0 === n.withCredentials && "" !== e && e !== o ? XDomainRequest || void 0 : XMLHttpRequest } return n }, u = function () { function e() { 0 === --l && (o(), i()) } function n(e) { return function () { !0 !== t[e.base] && (e.useEl.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", "#" + e.hash), e.useEl.hasAttribute("href") && e.useEl.setAttribute("href", "#" + e.hash)) } } function u(t) { return function () { var n = document.body, o = document.createElement("x"); t.onload = null, o.innerHTML = t.responseText, (o = o.getElementsByTagName("svg")[0]) && (o.setAttribute("aria-hidden", "true"), o.style.position = "absolute", o.style.width = 0, o.style.height = 0, o.style.overflow = "hidden", n.insertBefore(o, n.firstChild)), e() } } function s(t) { return function () { t.onerror = null, t.ontimeout = null, e() } } var d, a, l = 0; o(); var c = document.getElementsByTagName("use"); for (a = 0; a < c.length; a += 1) { try { var h = c[a].getBoundingClientRect() } catch (e) { h = !1 } var w = (d = c[a].getAttribute("href") || c[a].getAttributeNS("http://www.w3.org/1999/xlink", "href") || c[a].getAttribute("xlink:href")) && d.split ? d.split("#") : ["", ""], f = w[0]; w = w[1]; var v = h && 0 === h.left && 0 === h.right && 0 === h.top && 0 === h.bottom; h && 0 === h.width && 0 === h.height && !v ? (c[a].hasAttribute("href") && c[a].setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", d), f.length && (!0 !== (d = t[f]) && setTimeout(n({ useEl: c[a], base: f, hash: w }), 0), void 0 === d && (void 0 !== (w = r(f)) && (d = new w, t[f] = d, d.onload = u(d), d.onerror = s(d), d.ontimeout = s(d), d.open("GET", f), d.send(), l += 1)))) : v ? f.length && t[f] && setTimeout(n({ useEl: c[a], base: f, hash: w }), 0) : void 0 === t[f] ? t[f] = !0 : t[f].onload && (t[f].abort(), delete t[f].onload, t[f] = !0) } c = "", l += 1, e() }, s = function () { window.removeEventListener("load", s, !1), e = setTimeout(u, 0) }; "complete" !== document.readyState ? window.addEventListener("load", s, !1) : s() } }();